{
  "errors": [],
  "warnings": [],
  "root": {
    "kind": "BinaryExpression",
    "operator": ";",
    "lvalue": {
      "kind": "BinaryExpression",
      "operator": ";",
      "lvalue": {
        "kind": "BinaryExpression",
        "operator": "->",
        "lvalue": {
          "kind": "FunctionExpression",
          "name": "func",
          "params": [
            {
              "kind": "Variable",
              "name": "param1",
              "start": {
                "pos": 50,
                "row": 2,
                "col": 5
              },
              "end": {
                "pos": 56,
                "row": 2,
                "col": 11
              }
            },
            {
              "kind": "Variable",
              "name": "param2",
              "start": {
                "pos": 58,
                "row": 2,
                "col": 13
              },
              "end": {
                "pos": 64,
                "row": 2,
                "col": 19
              }
            },
            {
              "kind": "FunctionExpression",
              "name": "outer",
              "params": [
                {
                  "kind": "Variable",
                  "name": "outer_param",
                  "start": {
                    "pos": 72,
                    "row": 2,
                    "col": 27
                  },
                  "end": {
                    "pos": 83,
                    "row": 2,
                    "col": 38
                  }
                }
              ],
              "start": {
                "pos": 66,
                "row": 2,
                "col": 21
              },
              "end": {
                "pos": 84,
                "row": 2,
                "col": 39
              }
            }
          ],
          "start": {
            "pos": 45,
            "row": 2,
            "col": 0
          },
          "end": {
            "pos": 85,
            "row": 2,
            "col": 40
          }
        },
        "rvalue": {
          "kind": "ParenthesisedExpression",
          "value": {
            "kind": "Constant",
            "name": "null",
            "start": {
              "pos": 95,
              "row": 3,
              "col": 4
            },
            "end": {
              "pos": 100,
              "row": 4,
              "col": 0
            }
          },
          "start": {
            "pos": 89,
            "row": 2,
            "col": 44
          },
          "end": {
            "pos": 101,
            "row": 4,
            "col": 1
          }
        },
        "comment": "// Function calls and definitions\n// comment\n",
        "start": {
          "pos": 45,
          "row": 2,
          "col": 0
        },
        "end": {
          "pos": 101,
          "row": 4,
          "col": 1
        }
      },
      "rvalue": {
        "kind": "FunctionExpression",
        "name": "func",
        "params": [
          {
            "kind": "NumberLiteral",
            "literal": "1",
            "value": "1",
            "start": {
              "pos": 129,
              "row": 7,
              "col": 5
            },
            "end": {
              "pos": 130,
              "row": 7,
              "col": 6
            }
          },
          {
            "kind": "NumberLiteral",
            "literal": "2",
            "value": "2",
            "start": {
              "pos": 132,
              "row": 7,
              "col": 8
            },
            "end": {
              "pos": 133,
              "row": 7,
              "col": 9
            }
          },
          null
        ],
        "start": {
          "pos": 124,
          "row": 7,
          "col": 0
        },
        "end": {
          "pos": 135,
          "row": 7,
          "col": 11
        }
      },
      "comment": null,
      "start": {
        "pos": 45,
        "row": 2,
        "col": 0
      },
      "end": {
        "pos": 135,
        "row": 7,
        "col": 11
      }
    },
    "rvalue": null,
    "comment": "// optional comma ,\n",
    "start": {
      "pos": 45,
      "row": 2,
      "col": 0
    },
    "end": {
      "pos": 136,
      "row": 7,
      "col": 12
    }
  }
}